{"version":3,"sources":["helper/helper.js","helper/blogHelper.js"],"names":["getAuthor","items","author","filter","item","includes","id","getTags","tags","getCategories","category","Rating","rating","stars","i","push","className","pageUrl","window","location","href","socialShare","title","iconClass","iconStyle","link","encodeURIComponent","getBlog","blogpost","blog","parseInt","getRecentPost","post","timestamp","Date","postdate","getFilteredPosts","posts","cat","tag","searchQuery","catgoryFilter","undefined","tagFilter","authorFilter","searchFilter","toLowerCase","getPostNavigation","index","output","to","length","count","blogcategory","setCategoriesCount","today","slice","map","month","getTime","getDate","getMonth","getFullYear","setDemoDate"],"mappings":"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","file":"static/js/7.87e74a1d.chunk.js","sourcesContent":["\r\nimport author from '../data/team.json';\r\nimport tags from '../data/tags.json';\r\nimport category from '../data/category.json';\r\n\r\n// Author\r\nfunction getAuthor(items) {\r\n    var elems = author.filter((item) => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Tags\r\nfunction getTags(items) {\r\n    var elems = tags.filter(item => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\n// Categories\r\nfunction getCategories(items) {\r\n    var elems = category.filter(item => {\r\n        return items.includes(item.id)\r\n    });\r\n    return elems;\r\n}\r\nfunction Rating(rating) {\r\n    let stars = [];\r\n    for (let i = 0; i < 5; i++) {\r\n        stars.push(<span key={i} className=\"fs-16 text-light-white\"><i className=\"fas fa-star\" /></span>);\r\n    }\r\n    if (rating && rating > 0) {\r\n        for (let i = 0; i <= rating - 1; i++) {\r\n            stars[i] = <span key={i} className=\"fs-16 text-custom-yellow\"><i className=\"fas fa-star\" /></span>;\r\n        }\r\n    }\r\n    return stars;\r\n};\r\n// Social Share\r\nconst pageUrl = window.location.href;\r\nfunction socialShare(title) {\r\n    var socialIcons = [\r\n        {\r\n            title: \"facebook\",\r\n            iconClass: \"fab fa-facebook-f\",\r\n            iconStyle:\"fb\",\r\n            link: \"https://www.facebook.com/sharer/sharer.php?u=\" + encodeURIComponent(pageUrl) + \"\"\r\n        },\r\n        {\r\n            title: \"twitter\",\r\n            iconClass: \"fab fa-twitter\",\r\n            iconStyle:\"tw\",\r\n            link: \"http://twitter.com/intent/tweet?text=\" + encodeURIComponent(title) + \"&\" + encodeURIComponent(pageUrl) + \"\"\r\n        },\r\n        {\r\n            title: \"linkedin\",\r\n            iconClass: \"fab fa-linkedin-in\",\r\n            iconStyle:\"ln\",\r\n            link: \"https://www.linkedin.com/shareArticle?mini=true&url=\" + encodeURIComponent(pageUrl) + \"&title=\" + encodeURIComponent(title) + \"\"\r\n        },\r\n        {\r\n            title: \"pinterest\",\r\n            iconClass: \"fab fa-pinterest-p\",\r\n            iconStyle:\"gg\",\r\n            link: \"http://pinterest.com/pin/create/button/?url=\" + encodeURIComponent(pageUrl) + \"\"\r\n        }\r\n    ];\r\n    return socialIcons;\r\n}\r\nexport { getAuthor, Rating, socialShare, getTags, getCategories };","import React from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport blogpost from \"../data/blog/blog.json\";\r\nimport blogcategory from '../data/category.json';\r\n\r\nfunction setCategoriesCount() {\r\n    for (let i = 0; i < blogcategory.length; i++) {\r\n        var count = blogpost.filter(post => { return post.category.includes(parseInt(blogcategory[i].id)) });\r\n        count = count.length;\r\n        blogcategory[i].count = count;\r\n    }\r\n}\r\nsetCategoriesCount();\r\n// Post details\r\nfunction getBlog(id) {\r\n    return blogpost.filter(blog => { return blog.id === parseInt(id) })[0];\r\n}\r\n// Related post\r\nfunction getPostByCategory(items, pageRoute) {\r\n    var elems = blogpost.filter((post) => { return parseInt(post.id) !== parseInt(pageRoute) && post.category.some(r => items.includes(r)) });\r\n    return elems;\r\n}\r\n\r\n// Recent post\r\nfunction changeToMonth(month) {\r\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    return months[month];\r\n}\r\n\r\nfunction setDemoDate() {\r\n    var today = new Date();\r\n    blogpost.slice(0, 4).map(post => {\r\n        post.timestamp = today.getTime() - (3 * 24 * 60 * 60 * 1000);\r\n        // Remove this date on your live demo. This is only used for preview purposed. Your date should actually be updated\r\n        // in the blog.json object\r\n        post.postdate = `${today.getDate() - 2} ${changeToMonth(today.getMonth())}, ${today.getFullYear()}`;\r\n        return post;\r\n    });\r\n}\r\n\r\nfunction getRecentPost() {\r\n    var elems = blogpost.filter(post => {\r\n        return post.timestamp < new Date(post.postdate);\r\n    });\r\n    return elems;\r\n}\r\n\r\nsetDemoDate();\r\n// Filter \r\nfunction getFilteredPosts(posts, filter = { cat: '', tag: '', author: '', searchQuery: '' }) {\r\n    var catgoryFilter = filter.cat !== undefined && filter.cat !== null && filter.cat !== '';\r\n    var tagFilter = filter.tag !== undefined && filter.tag !== null && filter.tag !== '';\r\n    var authorFilter = filter.author !== undefined && filter.author !== null && filter.author !== '';\r\n    var searchFilter = filter.searchQuery !== undefined && filter.searchQuery !== null && filter.searchQuery !== '';\r\n    // Category filter\r\n    if (catgoryFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.category !== undefined && post.category !== null) && post.category.includes(parseInt(filter.cat))\r\n        })\r\n    } \r\n    // Tag filter\r\n    if (tagFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.tags !== undefined && post.tags !== null) && post.tags.includes(parseInt(filter.tag))\r\n        })\r\n    }\r\n    // Author filter\r\n    if (authorFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.author !== undefined && post.author !== null) && post.author.includes(parseInt(filter.author))\r\n        })\r\n    }\r\n    if (searchFilter) {\r\n        posts = posts.filter(post => {\r\n            return (post.title !== undefined && post.title !== null) && post.title.toLowerCase().includes(filter.searchQuery.toLowerCase())\r\n        })\r\n    }\r\n    return posts;\r\n}\r\n// Pagination\r\nfunction getPostNavigation(items, index) {\r\n    var output = [],\r\n        id, item;\r\n    if (items[index - 1] !== undefined && index - 1 !== -1) {\r\n        item = items[index - 1];\r\n        id = item.id;\r\n        // Show the previous button \r\n        output.push(<li className=\"page-item\" key={id}><Link className=\"page-link\" to={\"/blog-details/\" + parseInt(id)}>Previous</Link></li>);\r\n    }\r\n    if (items[index + 1] !== undefined && index <= items.length - 1) {\r\n        // Show next button \r\n        item = items[index + 1];\r\n        id = item.id;\r\n        output.push(<li className=\"page-item\" key={id}><Link className=\"page-link\" to={\"/blog-details/\" + parseInt(id)}>Next</Link></li>);\r\n    }\r\n\r\n    return output;\r\n}\r\nexport { getBlog, getFilteredPosts, getRecentPost, getPostByCategory, getPostNavigation };"],"sourceRoot":""}